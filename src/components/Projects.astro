---
import projectsData from "@content/projects.json";
import SkillIcons from "@components/SkillIcons.astro";
import HoverButton from "@components/HoverButton.astro";
import GitHubIcon from "@assets/github-mark.svg";
import { Image } from "astro:assets";

import project1Image from "@assets/project_1.webp";
import project2Image from "@assets/project_2.webp";
import project3Image from "@assets/project_3.webp";
import project4Image from "@assets/project_4.webp";

import type { ImageMetadata } from "astro";

const projectImages: Record<string, ImageMetadata> = {
  "project_1.webp": project1Image,
  "project_2.webp": project2Image,
  "project_3.webp": project3Image,
  "project_4.webp": project4Image,
};

interface Project {
  name: string;
  description: string;
  techUsed: string[];
  features: string[];
  link: string;
  imagePath?: string;
}

interface ProjectsData {
  projects: Project[];
}

const { projects } = projectsData as ProjectsData;
---

<section>
  <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
    {
      projects.map((project: Project) => (
        <div
          aria-labelledby={`project-title-${project.name}`}
          class="project-card group bg-tertiary-project text-secondary-project rounded-lg transition-all duration-300 relative hover:shadow-xl hover:scale-102 focus-within:shadow-xl focus-within:scale-102 flex flex-col h-full overflow-hidden focus:outline-none focus-visible:outline-2 focus-visible:outline-dotted focus-visible:outline-primary-logo focus-visible:outline-offset-2"
          tabindex="0"
        >
          {/* Project Image (if available) */}
          {project.imagePath &&
            projectImages[project.imagePath as keyof typeof projectImages] && (
              <a
                aria-label={`View full screenshot of ${project.name}`}
                class="block w-full cursor-zoom-in focus:outline-none focus-visible:outline-2 focus-visible:outline-dotted focus-visible:outline-primary-logo focus-visible:outline-offset-2"
                href={
                  projectImages[project.imagePath as keyof typeof projectImages]
                    .src
                }
                rel="noopener noreferrer"
                target="_blank"
              >
                <div class="w-full h-[180px] relative overflow-hidden">
                  {/* Color overlay that disappears on hover */}
                  <div class="absolute inset-0 bg-primary-project opacity-100 mix-blend-color group-hover:opacity-0 group-focus-within:opacity-0 z-10 transition-opacity duration-300" />

                  {/* "Click to view" text that appears on hover */}
                  <div class="absolute inset-0 flex items-center justify-center z-20 opacity-0 group-hover:opacity-100 group-focus-within:opacity-100 transition-opacity duration-200">
                    <HoverButton text="Click to view full image" />
                  </div>

                  <Image
                    alt={`Screenshot of ${project.name} project`}
                    class="w-full h-full object-cover object-top transition-all duration-300"
                    loading="eager"
                    src={
                      projectImages[
                        project.imagePath as keyof typeof projectImages
                      ]
                    }
                  />
                </div>
              </a>
            )}

          <div class="p-4 flex-1 flex flex-col">
            {/* Project Title & Link */}
            <div class="flex justify-between items-center mb-2">
              <h3
                class="text-xl font-semibold"
                id={`project-title-${project.name}`}
              >
                {project.name}
              </h3>
              <div class="relative">
                <a
                  aria-label={`View ${project.name} on GitHub`}
                  class="transform transition duration-300 focus:outline-none focus-visible:outline-2 focus-visible:outline-dotted focus-visible:outline-primary-logo focus-visible:outline-offset-2 block relative"
                  href={project.link}
                  rel="noopener noreferrer"
                  target="_blank"
                >
                  <GitHubIcon
                    aria-hidden="true"
                    class="w-6 h-6 transform transition duration-300 group-hover:-translate-y-1 group-hover:scale-125 group-focus-within:-translate-y-1 group-focus-within:scale-125"
                    role="img"
                    stroke="currentColor"
                  />
                  <div class="absolute -top-1 right-8 opacity-0 group-hover:opacity-100 group-focus-within:opacity-100 transition-opacity duration-300">
                    <HoverButton text="View on GitHub" />
                  </div>
                </a>
              </div>
            </div>
            {/* Project Description */}
            <p class="text-sm text-primary-project mb-2">
              {project.description}
            </p>
            {/* Key Features */}
            {project.features && project.features.length > 0 && (
              <ul class="text-sm text-primary-project list-disc pl-5 mb-2">
                {project.features.map((feature: string) => (
                  <li>{feature}</li>
                ))}
              </ul>
            )}
            {/* Tech Used */}
            <div class="mt-auto">
              <SkillIcons
                bgColor="bg-primary-badge-project"
                bgHover="hover:bg-secondary-badge-project"
                filter={project.techUsed}
                textColor="text-secondary-badge-project"
                textHover="hover:text-primary-badge-project"
              />
            </div>
          </div>
        </div>
      ))
    }
  </div>
</section>
