{
  "projects": [
    {
      "name": "K3s-cluster",
      "description": "A microservices application deployed on a K3s Kubernetes cluster, featuring API Gateway, Inventory, and Billing services integrated with RabbitMQ and PostgreSQL.",
      "techUsed": [
        "Kubernetes",
        "Docker",
        "Vagrant",
        "Bash",
        "VirtualBox",
        "PostgreSQL",
        "Node.js"
      ],
      "features": [
        "Auto-scaling microservices with gateway and service components.",
        "Persistent storage for PostgreSQL databases and RabbitMQ.",
        "Cluster lifecycle management scripts.",
        "Fault-tolerant message processing system.",
        "API documentation with Postman collections for all endpoints."
      ],
      "link": "https://github.com/MeelisM/K3s-cluster"
    },
    {
      "name": "Astro Portfolio",
      "description": "A fast portfolio website built with Astro and Tailwind CSS. Deployed on AWS with automated infrastructure and CI/CD.",
      "techUsed": [
        "Astro",
        "TypeScript",
        "Amazon Web Services",
        "Terraform",
        "Tailwind CSS"
      ],
      "features": [
        "Hosted on AWS S3 with CloudFront for secure content delivery.",
        "Automated infrastructure provisioning using Terraform.",
        "Cloudflare-managed domain with HTTPS end-to-end encryption.",
        "Serverless visitor tracking via API Gateway, Lambda & DynamoDB.",
        "CI/CD pipeline with OIDC-authenticated GitHub Actions."
      ],
      "link": "https://github.com/MeelisM/meelis.dev"
    },
    {
      "name": "VMicroServices",
      "description": "A virtualized microservices-based project with automated setup for development and production.",
      "techUsed": ["Node.js", "PostgreSQL", "Vagrant", "Postman", "VirtualBox"],
      "features": [
        "API Gateway, Inventory, and Billing services running in isolated VMs.",
        "RabbitMQ for asynchronous message processing.",
        "Automated provisioning with database migrations and service orchestration.",
        "Comprehensive API testing with Postman collections."
      ],
      "link": "https://github.com/MeelisM/VMicroServices"
    },
    {
      "name": "Dockerized API",
      "description": "A containerized microservices-based project that leverages Docker and Docker Compose for orchestration.",
      "techUsed": ["Node.js", "PostgreSQL", "Docker", "Postman"],
      "features": [
        "Microservices architecture with API Gateway, Inventory, and Billing services.",
        "RabbitMQ for asynchronous messaging between services.",
        "Database services with persistent PostgreSQL volumes.",
        "Secure API Gateway for centralized routing and access control.",
        "Fully containerized setup with automated service orchestration."
      ],
      "link": "https://github.com/MeelisM/dockerized-api"
    }
  ]
}
